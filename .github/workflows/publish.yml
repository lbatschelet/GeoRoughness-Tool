name: Publish Python Package

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure we fetch all history to prevent shallow clone issues

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine setuptools-scm

      - name: Get version from setuptools-scm
        id: get_version
        run: |
          VERSION=$(python setup.py --version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update CITATION.cff
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          VERSION=${{ env.VERSION }}
          DATE=$(date -u +"%Y-%m-%d")
          sed -i "s/^version:.*/version: $VERSION/" CITATION.cff
          sed -i "s/^date-released:.*/date-released: $DATE/" CITATION.cff
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://$GH_PAT@github.com/${{ github.repository }}.git
          git add CITATION.cff
          git commit -m "Update CITATION.cff for version $VERSION"
          git push origin HEAD:main --force

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Check build
        run: |
          if [ -z "$(ls -A dist)" ]; then
            echo "Build failed"
            exit 1
          fi

      - name: Publish package
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Changes in this release
            - Updated version to ${{ env.VERSION }}
          draft: false
          prerelease: false
